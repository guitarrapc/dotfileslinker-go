name: Release

on:
  push:
    tags:
      - 'v*.*.*'

permissions:
  contents: write

jobs:
  goreleaser:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          persist-credentials: false
      - name: Set up Go
        uses: actions/setup-go@0aaccfd150d50ccaeb58ebd88d36e91967a5f35b # v5.4.0
        with:
          go-version: '1.22'
      - name: Run GoReleaser
        uses: goreleaser/goreleaser-action@5742e2a039330cbb23ebf35f046f814d4c6ff811 # v5.1.0
        with:
          distribution: goreleaser
          version: latest
          args: release --clean
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  build-cross-platform:
    name: Build binaries
    runs-on: ubuntu-latest
    strategy:
      matrix:
        goos: [linux, windows, darwin]
        goarch: [amd64, arm64]
    steps:
      - name: Checkout code
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          persist-credentials: false
      - name: Set up Go
        uses: actions/setup-go@0aaccfd150d50ccaeb58ebd88d36e91967a5f35b # v5.4.0
        with:
          go-version: '1.22'
      - name: Build binary
        run: |
          export GOOS=${{ matrix.goos }}
          export GOARCH=${{ matrix.goarch }}

          # Get version from tag
          VERSION=${GITHUB_REF#refs/tags/}
          echo "Building ${VERSION} for ${GOOS}-${GOARCH}"

          # Set output binary name based on OS
          if [ "$GOOS" = "windows" ]; then
            OUTPUT_NAME=dotfileslinker-${GOOS}-${GOARCH}.exe
          else
            OUTPUT_NAME=dotfileslinker-${GOOS}-${GOARCH}
          fi

          # Build with version info
          go build -v -ldflags="-X 'main.version=${VERSION}'" -o ${OUTPUT_NAME} ./cmd/dotfileslinker
      - name: Upload artifacts
        uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4.6.2
        with:
          name: dotfileslinker-${{ matrix.goos }}-${{ matrix.goarch }}
          path: dotfileslinker-${{ matrix.goos }}-${{ matrix.goarch }}*

  create-release:
    name: Create Release
    needs: [goreleaser, build-cross-platform]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          persist-credentials: false
      - name: Download all artifacts
        uses: actions/download-artifact@95815c38cf2ff2164869cbab79da8d1f422bc89e # v4.2.1
        with:
          path: ./artifacts
      - name: Display artifacts
        run: ls -R ./artifacts
      - name: Prepare assets for release
        run: |
          mkdir -p ./release
          find ./artifacts -type f -exec cp {} ./release \;
      - name: Create checksum file
        run: |
          cd ./release
          sha256sum * > checksums.txt
          cat checksums.txt
      - name: Create GitHub Release
        uses: softprops/action-gh-release@de2c0eb89ae2a093876385947365aca7b0e5f844 # v0.1.15
        with:
          files: ./release/*
          generate_release_notes: true
          body_path: CHANGELOG.md
          fail_on_unmatched_files: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
