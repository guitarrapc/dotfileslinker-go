name: Release

on:
  push:
    tags:
      - 'v*.*.*'

jobs:
  release:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    timeout-minutes: 10
    steps:
      - name: Checkout
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
        with:
          fetch-depth: 0
          persist-credentials: false
      - name: Set up Go
        uses: actions/setup-go@d35c59abb061a4a6fb18e82ac0862c26744d6ab5 # v5.5.0
        with:
          go-version: '1.24'
      # Cosign installation for signing artifacts
      - name: Install cosign
        uses: sigstore/cosign-installer@398d4b0eeef1380460a10c8013a76f728fb906ac # v3.9.1
        with:
          cosign-release: v2.5.0
      # Setup Cosign keys for signing
      - name: Setup Cosign keys
        run: echo "${{ secrets.SYNCED_COSIGN_PRIVATE_KEY }}" > cosign.key
      # Run GoReleaser to build and upload assets to the release
      - name: Run GoReleaser
        uses: goreleaser/goreleaser-action@9c156ee8a17a598857849441385a2041ef570552 # v6.3.0
        with:
          distribution: goreleaser
          version: '~> v2'
          args: release --clean
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          COSIGN_PASSWORD: ${{ secrets.SYNCED_COSIGN_PASSWORD }}
      # Clean up sensitive files
      - name: Clean up
        if: always()
        run: rm -f cosign.key
      - name: Update Release Notes with gh CLI
        run: gh release edit "$TAG_NAME" --draft --notes-file <(gh api repos/${{ github.repository }}/releases/generate-notes -F "tag_name=$TAG_NAME" -q .body)
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GH_REPO: ${{ github.repository }}
          TAG_NAME: ${{ github.ref_name }}
